{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "MongoDB Data API",
    "description": "MongoDB Data API\nhttps://www.mongodb.com/data-api/ \n\nThe Data API provides you with a REST access to your data in MongoDB Atlas(https://www.mongodb.com/atlas), \nthe database-as-a-service offering by MongoDB.\n\nYou can find the full documentation on the MongoDB Data API on the https://docs.atlas.mongodb.com/api/data-api-resources/#data-api-resources\n\nGetting Started\n\nTo test out the MongoDB Data API connector, start by creating a MongoDB Atlas cluster (https://docs.atlas.mongodb.com/tutorial/).\n\nOnce you have a cluster up and running, enable the Data API (https://docs.atlas.mongodb.com/api/data-api/#1.-enable-the-data-api\n\nFrom the Atlas UI, copy the URL endpoint provided for the Data API, and paste the value in your URL_ENDPOINT variable. Set the base path to\n/app/<Data API App ID>/endpoint/data/beta/\n\nStill in the Atlas UI, create a new API key, copy the value and paste it in the API_KEY connection variable.\n\nFill in the other variables with the appropriate values for your cluster, database, and collection names.\n\nYou can now explore the various endpoints and see how to perform CRUD operations on your collection using the MongoDB Data API."
  },
  "host": "data.mongodb-api.com",
  "basePath": "/app/<Data API App ID>/endpoint/data/beta/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/action/insertOne": {
      "post": {
        "summary": "Insert Document",
        "description": "Using the `/insertOne` endpoint, you can add a document to a collection. Use the `document` property in the request body to specify the document that should be created.",
        "operationId": "InsertDocument",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type"
          },
          {
            "name": "api-key",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "",
            "description": "api-key"
          },
          {
            "name": "Access-Control-Request-Headers",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "*",
            "description": "Access-Control-Request-Headers"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dataSource": {
                  "type": "string",
                  "description": "dataSource"
                },
                "database": {
                  "type": "string",
                  "description": "database"
                },
                "collection": {
                  "type": "string",
                  "description": "collection",
                  "title": ""
                },
                "document": {
                  "type": "object",
                  "properties": {},
                  "description": "document"
                }
              },
              "default": {
                "dataSource": "{{DATA_SOURCE}}",
                "database": "{{DATABASE}}",
                "collection": "{{COLLECTION}}",
                "document": {}
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "201",
            "schema": {},
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "400",
            "schema": {},
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "401",
            "schema": {},
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "dataSource": {
                  "type": "string",
                  "description": "dataSource"
                },
                "database": {
                  "type": "string",
                  "description": "database"
                },
                "collection": {
                  "type": "string",
                  "description": "collection"
                },
                "document": {
                  "type": "object",
                  "properties": {},
                  "description": "document"
                }
              }
            }
          }
        }
      }
    },
    "/action/deleteOne": {
      "post": {
        "summary": "Delete Document",
        "description": "To delete a single document, use the `/deleteOne` endpoint. Use the `filter` property in the request body to specify the search criteria. If more than one document matches the criteria, only the first match will be deleted.",
        "operationId": "DeleteDocument",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type"
          },
          {
            "name": "Access-Control-Request-Headers",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "*",
            "description": "Access-Control-Request-Headers"
          },
          {
            "name": "api-key",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "",
            "description": "api-key"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dataSource": {
                  "type": "string",
                  "description": "dataSource"
                },
                "database": {
                  "type": "string",
                  "description": "database"
                },
                "collection": {
                  "type": "string",
                  "description": "collection"
                },
                "filter": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "name"
                    }
                  },
                  "description": "filter"
                }
              },
              "default": {
                "dataSource": "{{DATA_SOURCE}}",
                "database": "{{DATABASE}}",
                "collection": "{{COLLECTION}}",
                "filter": {
                "name": "John Sample"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {},
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "400",
            "schema": {},
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "401",
            "schema": {},
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/action/findOne": {
      "post": {
        "summary": "Find Document",
        "description": "Using the `/findOne` endpoint will let you retrieve a single document from a collection. Use the `filter` property in the request body to specify the search criteria. If more than one document matches the criteria, only the first match will be returned.",
        "operationId": "FindDocument",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "application/json",
            "description": "Content-Type"
          },
          {
            "name": "api-key",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "",
            "description": "api-key"
          },
          {
            "name": "Access-Control-Request-Headers",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "*",
            "description": "Access-Control-Request-Headers"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dataSource": {
                  "type": "string",
                  "description": "dataSource"
                },
                "database": {
                  "type": "string",
                  "description": "database"
                },
                "collection": {
                  "type": "string",
                  "description": "collection"
                },
                "filter": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "name"
                    }
                  },
                  "description": "filter"
                }
              },
              "default": {
                "dataSource": "{{DATA_SOURCE}}",
                "database": "{{DATABASE}}",
                "collection": "{{COLLECTION}}",
                "filter": {
                "name": "John Sample"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {},
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "400",
            "schema": {},
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "401",
            "schema": {},
            "headers": {
              "Content-Type": {
                "description": "Content-Type",
                "type": "string"
              },
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "api-key"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}
